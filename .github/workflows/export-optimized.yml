name: export-optimized

# Based on https://github.com/MewPurPur/GodSVG/blob/main/.github/workflows/export-optimized.yml
# Thanks Floof!
on:
  workflow_dispatch:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

env:
  # Which godot version to use for exporting.
  GODOT_VERSION: 4.4.1
  # Which godot release to use for exporting. (stable/rc/beta/alpha)
  GODOT_RELEASE: stable
  # Used in the editor config file name. Do not change this for patch releases.
  GODOT_FEATURE_VERSION: 4.4
  # Commit hash
  GODOT_COMMIT_HASH: 49a5bc7b6
  PROJECT_NAME: Godot Pastebin
  # deprecated=no disables deprecated Godot features, which exist for compat and we don't use.
  # vulkan=no, use_volk=no since we use Compatibility Renderer. TODO for 4.5 disable rendering_device too.
  # openxr=no since we don't use OpenXR. TODO 4.5 we can change this to just disable XR altogether.
  # disable_3d=yes since we don't use 3D features.
  # graphite=no I'm not sure why we have disabled, but it's a font-shaping engine.
  # All modules are disabled by default, except for the following:
  # - gdscript: Obvious.
  # - text_server_adv: Currently unneeded, but needed for languages like Arabic.
  # - freetype: Something about font rendering.
  # build_proflie disables a lot of unused classes.
  BUILD_OPTIONS: target=template_release
                lto=full
                production=yes
                deprecated=no
                minizip=no
                brotli=no
                vulkan=no
                use_volk=no
                openxr=no
                disable_3d=yes
                modules_enabled_by_default=no
                module_text_server_fb_enabled=yes
                module_text_server_adv_enabled=yes
                module_freetype_enabled=yes
                module_gdscript_enabled=yes
                module_webp_enabled=yes
                module_svg_enabled=yes
                graphite=no
                build_profile=../godot-pastebin/.github/disabled_classes.build
  # Links
  GODOT_REPO: https://github.com/godotengine/godot.git
  ANGLE_DOWNLOAD_BASE_URL: https://github.com/godotengine/godot-angle-static/releases/download/chromium%2F6601.2/godot-angle-static

jobs:
  build-web:
    name: Export Pastebin for Web
    runs-on: ubuntu-latest
    env:
      PLATFORM: "Web"
    steps:
      - name: Cache Template
        id: cache-template
        uses: actions/cache@v3
        with:
          key: template-${{ env.PLATFORM }}-${{ env.GODOT_VERSION }}-${{ env.GODOT_RELEASE }}-${{ env.BUILD_OPTIONS }}
          path: |
            ~/.local/share/godot/export_templates/

      - name: Set up Godot Editor
        run: |
          mkdir -p ~/godot-editor
          cd ~/godot-editor
          wget -q https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${GODOT_RELEASE}/Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          unzip Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          mv ./Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64 ~/godot-editor/godot
          echo "~/godot-editor" >> $GITHUB_PATH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: sudo apt-get install -y scons python3

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
        shell: bash

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Clone Godot repository
        run: git clone $GODOT_REPO godot

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Checkout specific commit
        run: |
          cd godot
          git fetch
          git checkout $GODOT_COMMIT_HASH

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: godot-pastebin

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for Web
        run: |
          cd godot
          source ../emsdk/emsdk_env.sh
          scons p=web arch=wasm32 ${BUILD_OPTIONS} threads=no
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/
          mv ./bin/godot.web.template_release.wasm32.nothreads.zip ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/web_nothreads_release.zip

      - name: Export project
        run: |
          cd godot-pastebin
          mkdir -p build/web
          godot --headless --export-release "Web" build/web/godot-pastebin.html
          cd build/web
          mv godot-pastebin.html index.html

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}.Web
          path: godot-pastebin/build/web
          if-no-files-found: error
          retention-days: 28
